
LEGEND:
🟠 - Paused
🟢 - Done
🔴 - Pending
🟡 - In progress


🎯 GOAL: send tradingview chart images (with sl/tp lines of a specific entry on a specific chart) to twitter


❓I have asked for help on stack overflow & on the discord pinescript server
link to the stack overflow question: 
https://stackoverflow.com/questions/76693684/how-do-i-send-tradingview-chart-snapshots-to-twitter-using-python-pinescript


🤔 HOW DO WE DO IT:


in order to post the screenshot, 

1. 🟢 recieve signals from the screener. it will tell whether there are buy/sell signals and on what chart and timeframe.
   1. 🟢 get the data thru alerts on tradingview. scrape the tradingview chart for the alert. get the data from the alert
   2. 🟢 make sure that in pinescript, the alert is only showing those entries which have just closed or just opened. Also, remove the table, its just eating up space. check if the alerts are showing the correct information.
   (so that we can know which charts to open)
   3. 🟢 double check whether its giving correct info in the alert

   OR 

   in python, keep track of what trades just opened and what trades just closed


2. 🟢 get the entry data in the alert
   🟢 structure the code and the modules correctly (add the code for the open_tv file)
   🟢 go to the chart and the timeframe which has that new entry 
      🟢 remove the screener on the chart only once & make the chart position look nice
      🟢 add a new indicator to the chart only once (the one which will draw tp/sl lines)
      🟢 go to the new symbol and timeframe (optimize the change tf method so that it only changes if the current timeframe is different than the wanted timeframe)
   🟠 get the exit data too and go to the chart. we're not getting the closed sell/closed buy part of the alert. fix this in the read_alert function

3. 🟠 for an exit, show that that price is touching the tp in the green part
      🟢 make an indicator which will draw the long/short position on the chart given the price & time inputs

4. 🟡 take a snapshot of it and post to twitter (try to use the tweepy library)
   🟢 get the entry, sl, entry price data from the alert
   🟡 when on that entry's chart, enter the entry price, sl & tp into the indicator
   after that, take a snapshot
      🟢 get the entry, sl, entry price data from the alert
      🟢 double click on indicator and enter the tp,sl and entry. asked question on stack overflow & discord:
         https://stackoverflow.com/questions/76727291/double-clicking-an-element-with-selenim-in-python-isnt-working
      🟢 make sure the tp, sl & entry are correct when inputting them in the settings
      🟢 after going to every chart, make sure that the last long/short position has been removed so that when we draw a new one, the last one won't show
      🟢 draw tp, sl, entry labels with their price
      🟢 when inputting the sl, entry & tp, also input the type of entry i.e. Buy or Sell. do this in pytohn and pinescript
      🟢 update script changes to drive
      🔴 after that, take a snapshot using tweepy. read articles and videos
         🟡 how to tweet - https://www.youtube.com/watch?v=Ik1Sw2bkago&list=PLTqHuV0gIyxq_Wix5AbtirmUkkmJplEYn&index=2
         using the twitter api- https://developer.twitter.com/en/docs/twitter-api/getting-started/about-twitter-api
         developer portal - https://developer.twitter.com/en/portal/dashboard

5. 🔴 store that snapshot and other info in a database

6. 🔴 optimize:
   try to login to tradingview without having to sign in. make sure it automatically logs in (use cookies)
   https://stackoverflow.com/questions/45417335/python-use-cookie-to-login-with-selenium



API KEY:
gx8Uxed9AeiU4VYYisyfmXsz8

API SECRET:
3i3IA6R1O0HTIyNby8TvxHe4ExNTU9yTPyKUSJVkKGAtAbF0X1

BEARER TOKEN:
AAAAAAAAAAAAAAAAAAAAAM%2F8oAEAAAAALkY4x84f8qk1PMlgv5TTIjBUiYk%3DsBC4N3lhXmIf6DrfFd7bMH1uY9kUkou9nNiIKzVoYWoDuPUE38


ACCESS TOKEN:
1496761536953864194-ISDErd59d4OkOlnuPCVu7akibjhFpf

ACCESS TOKEN SECRET:
JBOHAIfWNyLQqhthnfIxPeWtk42dnFqohtwtTeImr0Sii


OAuth 2.0 Client ID and Client Secret

CLIENT ID:
UE5xTmVvdTdCd19QX1Y5eFlCc186MTpjaQ

CLIENT SECRET:
Fm3SEOskSW2MeFYUrTwzL1pEhOXrCv-DQTZubAfaA9-8t4EJaO





